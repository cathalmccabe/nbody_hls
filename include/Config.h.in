/// @author    Johannes de Fine Licht (definelicht@inf.ethz.ch)
/// @copyright This software is copyrighted under the BSD 3-Clause License.

#pragma once

#include <cstddef>
#include <cstdint>
#include "hls_half.h"

using Data_t = ${NBODY_DATA_TYPE};
constexpr unsigned kMemoryWidthBytes = 64; // 512-bit memory port
constexpr unsigned kNBodies = ${NBODY_N};
constexpr unsigned kUnrollDepth = ${NBODY_UNROLL_DEPTH};
constexpr unsigned kPipelineFactor = ${NBODY_PIPELINE_FACTOR};
constexpr unsigned kDims = ${NBODY_DIMS}; // Will currently fail if != 3
constexpr unsigned kSteps = ${NBODY_STEPS};
const Data_t kTimestep = ${NBODY_TIMESTEP}; // dt
constexpr float kFrequency = ${NBODY_TARGET_CLOCK};
const Data_t kSoftening = ${NBODY_SOFTENING_TERM}; // eps^2
const Data_t kDampingFactor = ${NBODY_DAMPING_FACTOR};

// Tiling scheme:
//
// T := kSteps
// N := kNBodies
// K := kUnrollDepth
// L := kPipelineFactor
//
// for t in 0:T
//   for k in 0:K
//     for l in 0:L
//       load(i)
//   for i in N/(K*L)
//     for j in N
//       load(j)
//       for l in L
//         parallel_for k in K
//           compute
//   for k in 0:K
//     for l in 0:L
//       store(i)
